---
# Explicitly disabled checks:
#
# bugprone-forwarding-reference-overload:
#   Does not take into account the use of concepts, so it has many false
#   positives.
#
# clang-diagnostic-unqualified-std-cast-call:
#   We have a using namespace std in our cpp files and do not want to
#   qualitfy std::move all the time
#
# misc-definitions-in-headers:
#   Does not work correctly with constexpr variables which are implicitly
#   inline, so should not lead to ODR violations.
#
# performance-move-const-arg:
#   The constructor of RuntimeString takes data128_t by rvalue reference on
#   purpose. This checks warns every time this constructor is used. Also, in
#   some move constructors we use member(move(arg)) where the type of
#   member/arg is trivially-copyable which this check doesn't like either.
#
# performance-no-int-to-ptr:
#   We use uintptr casts in many places, so this leads to many false positives.
#
# performance-unnecessary-copy-initialization,
# performance-unnecessary-value-param:
#   We have a few types that are not trivially copyable (CGType, RTPtr,
#   FunctionRef) but we want to pass them around by value anyway. Because of
#   that, this check generates a lot of noise.
#
# clang-analyzer-cplusplus.NewDeleteLeaks:
#   This check cannot track allocated pointers when they are casted to uintptr
#   or void*, so it will often mistakenly complain about leaks.
Checks: >
  bugprone-assert-side-effect,
  bugprone-copy-constructor-init,
  bugprone-dangling-handle,
  bugprone-infinite-loop,
  bugprone-integer-division,
  bugprone-misplaced-widening-cast,
  bugprone-parent-virtual-call,
  bugprone-posix-return,
  bugprone-redundant-branch-condition,
  bugprone-reserved-identifier,
  bugprone-string-constructor,
  bugprone-string-integer-assignment,
  bugprone-string-literal-with-embedded-nul,
  bugprone-suspicious-include,
  bugprone-suspicious-memory-comparison,
  bugprone-suspicious-memset-usage,
  bugprone-suspicious-semicolon,
  bugprone-swapped-arguments,
  bugprone-terminating-continue,
  bugprone-throw-keyword-missing,
  bugprone-too-small-loop-variable,
  bugprone-undefined-memory-manipulation,
  bugprone-undelegated-constructor,
  bugprone-unhandled-self-assignment,
  bugprone-unused-raii,
  bugprone-unused-return-value,
  bugprone-use-after-move,
  bugprone-virtual-near-miss,
  -bugprone-forwarding-reference-overload,
  -clang-diagnostic-unqualified-std-cast-call,
  misc-new-delete-overloads,
  misc-non-copyable-objects,
  misc-redundant-expression,
  misc-static-assert,
  misc-throw-by-value-catch-by-reference,
  misc-uniqueptr-reset-release,
  misc-unused-alias-decls,
  misc-unused-parameters,
  misc-unused-using-decls,
  -misc-definitions-in-headers,
  modernize-use-override,
  modernize-use-using,
  performance-*,
  -performance-move-const-arg,
  -performance-no-int-to-ptr,
  -performance-unnecessary-copy-initialization,
  -performance-unnecessary-value-param,
  readability-container-data-pointer,
  -clang-analyzer-cplusplus.NewDeleteLeaks,
CheckOptions:
- key: modernize-use-override.IgnoreDestructors
  value: 'true'
- key: modernize-use-override.AllowOverrideAndFinal
  value: 'true'
HeaderFilterRegex: '.*(codegen|plan|rts|infra)/.*'
